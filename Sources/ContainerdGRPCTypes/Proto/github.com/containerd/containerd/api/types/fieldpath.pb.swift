// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: github.com/containerd/containerd/api/types/fieldpath.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Protocol Buffers for Go with Gadgets
//
// Copyright (c) 2013, The GoGo Authors. All rights reserved.
// http://github.com/gogo/protobuf
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Extension support defined in fieldpath.proto.

// MARK: - Extension Properties

// Swift Extensions on the extended Messages to add easy access to the declared
// extension fields. The names are based on the extension field name from the proto
// declaration. To avoid naming collisions, the names are prefixed with the name of
// the scope where the extend directive occurs.

extension SwiftProtobuf.Google_Protobuf_FileOptions {

  public var Containerd_Types_fieldpathAll: Bool {
    get {return getExtensionValue(ext: Containerd_Types_Extensions_fieldpath_all) ?? false}
    set {setExtensionValue(ext: Containerd_Types_Extensions_fieldpath_all, value: newValue)}
  }
  /// Returns true if extension `Containerd_Types_Extensions_fieldpath_all`
  /// has been explicitly set.
  public var hasContainerd_Types_fieldpathAll: Bool {
    return hasExtensionValue(ext: Containerd_Types_Extensions_fieldpath_all)
  }
  /// Clears the value of extension `Containerd_Types_Extensions_fieldpath_all`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearContainerd_Types_fieldpathAll() {
    clearExtensionValue(ext: Containerd_Types_Extensions_fieldpath_all)
  }
}

extension SwiftProtobuf.Google_Protobuf_MessageOptions {

  public var Containerd_Types_fieldpath: Bool {
    get {return getExtensionValue(ext: Containerd_Types_Extensions_fieldpath) ?? false}
    set {setExtensionValue(ext: Containerd_Types_Extensions_fieldpath, value: newValue)}
  }
  /// Returns true if extension `Containerd_Types_Extensions_fieldpath`
  /// has been explicitly set.
  public var hasContainerd_Types_fieldpath: Bool {
    return hasExtensionValue(ext: Containerd_Types_Extensions_fieldpath)
  }
  /// Clears the value of extension `Containerd_Types_Extensions_fieldpath`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearContainerd_Types_fieldpath() {
    clearExtensionValue(ext: Containerd_Types_Extensions_fieldpath)
  }

}

// MARK: - File's ExtensionMap: Containerd_Types_Fieldpath_Extensions

/// A `SwiftProtobuf.SimpleExtensionMap` that includes all of the extensions defined by
/// this .proto file. It can be used any place an `SwiftProtobuf.ExtensionMap` is needed
/// in parsing, or it can be combined with other `SwiftProtobuf.SimpleExtensionMap`s to create
/// a larger `SwiftProtobuf.SimpleExtensionMap`.
public let Containerd_Types_Fieldpath_Extensions: SwiftProtobuf.SimpleExtensionMap = [
  Containerd_Types_Extensions_fieldpath_all,
  Containerd_Types_Extensions_fieldpath
]

// Extension Objects - The only reason these might be needed is when manually
// constructing a `SimpleExtensionMap`, otherwise, use the above _Extension Properties_
// accessors for the extension fields on the messages directly.

public let Containerd_Types_Extensions_fieldpath_all = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufBool>, SwiftProtobuf.Google_Protobuf_FileOptions>(
  _protobuf_fieldNumber: 63300,
  fieldName: "containerd.types.fieldpath_all"
)

public let Containerd_Types_Extensions_fieldpath = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufBool>, SwiftProtobuf.Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 64400,
  fieldName: "containerd.types.fieldpath"
)
